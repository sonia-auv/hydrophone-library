-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\franc\OneDrive\Documents techniques\ETS\SONIA\Hydro software\Hydro_Update\slprj\hdlsrc\DOA_rearanged\Signal_Trigger.vhd
-- Created: 2021-06-21 21:49:40
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Signal_Trigger
-- Source Path: DOA_rearanged/Signal Trigger
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Signal_Trigger IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Data_in                           :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Ready                             :   IN    std_logic;
        Enable                            :   IN    std_logic;
        Signal_Threshold                  :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        coeff                             :   OUT   std_logic_vector(8 DOWNTO 0);  -- ufix9_En8
        Valid_out                         :   OUT   std_logic
        );
END Signal_Trigger;


ARCHITECTURE rtl OF Signal_Trigger IS

  -- Component Declarations
  COMPONENT Sample_and_Hold_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic;
          Trigger                         :   IN    std_logic;
          alpha                           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Fenetrage
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Valid_in                        :   IN    std_logic;
          Enable                          :   IN    std_logic;
          coeff                           :   OUT   std_logic_vector(8 DOWNTO 0)  -- ufix9_En8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Sample_and_Hold_block
    USE ENTITY work.Sample_and_Hold_block(rtl);

  FOR ALL : Fenetrage
    USE ENTITY work.Fenetrage(rtl);

  -- Signals
  SIGNAL Data_in_unsigned                 : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Signal_Threshold_unsigned        : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Sample_and_Hold_out1             : std_logic;
  SIGNAL Fenetrage_out1                   : std_logic_vector(8 DOWNTO 0);  -- ufix9
  SIGNAL Logical_Operator2_out1           : std_logic;

BEGIN
  u_Sample_and_Hold : Sample_and_Hold_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => Ready,
              Trigger => Logical_Operator_out1,
              alpha => Sample_and_Hold_out1
              );

  u_Fenetrage : Fenetrage
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Valid_in => Sample_and_Hold_out1,
              Enable => Enable,
              coeff => Fenetrage_out1  -- ufix9_En8
              );

  Data_in_unsigned <= unsigned(Data_in);

  Signal_Threshold_unsigned <= unsigned(Signal_Threshold);

  
  Relational_Operator_relop1 <= '1' WHEN Data_in_unsigned >= Signal_Threshold_unsigned ELSE
      '0';

  Logical_Operator1_out1 <=  NOT Ready;

  Logical_Operator_out1 <= Relational_Operator_relop1 XOR Logical_Operator1_out1;

  Logical_Operator2_out1 <= Sample_and_Hold_out1 AND Enable;

  coeff <= Fenetrage_out1;

  Valid_out <= Logical_Operator2_out1;

END rtl;

