-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\franc\OneDrive\Documents techniques\ETS\SONIA\Hydro software\Hydro_Update\slprj\hdlsrc\DOA_rearanged\Fenetrage.vhd
-- Created: 2021-06-21 21:49:40
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Fenetrage
-- Source Path: DOA_rearanged/Signal Trigger/Fenetrage
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.DOA_rearanged_pkg.ALL;

ENTITY Fenetrage IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Valid_in                          :   IN    std_logic;
        Enable                            :   IN    std_logic;
        coeff                             :   OUT   std_logic_vector(8 DOWNTO 0)  -- ufix9_En8
        );
END Fenetrage;


ARCHITECTURE rtl OF Fenetrage IS

  -- Component Declarations
  COMPONENT Subsystem_block3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Reset_1                         :   IN    std_logic;
          Enable                          :   IN    std_logic;
          Count                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- uint16
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Subsystem_block3
    USE ENTITY work.Subsystem_block3(rtl);

  -- Constants
  CONSTANT Direct_Lookup_Table_n_D_table_data : vector_of_unsigned9(0 TO 255) := 
    (to_unsigned(16#000#, 9), to_unsigned(16#000#, 9), to_unsigned(16#000#, 9), to_unsigned(16#000#, 9),
     to_unsigned(16#001#, 9), to_unsigned(16#001#, 9), to_unsigned(16#001#, 9), to_unsigned(16#002#, 9),
     to_unsigned(16#002#, 9), to_unsigned(16#003#, 9), to_unsigned(16#004#, 9), to_unsigned(16#005#, 9),
     to_unsigned(16#006#, 9), to_unsigned(16#007#, 9), to_unsigned(16#008#, 9), to_unsigned(16#009#, 9),
     to_unsigned(16#00A#, 9), to_unsigned(16#00B#, 9), to_unsigned(16#00C#, 9), to_unsigned(16#00E#, 9),
     to_unsigned(16#00F#, 9), to_unsigned(16#011#, 9), to_unsigned(16#012#, 9), to_unsigned(16#014#, 9),
     to_unsigned(16#016#, 9), to_unsigned(16#018#, 9), to_unsigned(16#019#, 9), to_unsigned(16#01B#, 9),
     to_unsigned(16#01D#, 9), to_unsigned(16#01F#, 9), to_unsigned(16#021#, 9), to_unsigned(16#024#, 9),
     to_unsigned(16#026#, 9), to_unsigned(16#028#, 9), to_unsigned(16#02A#, 9), to_unsigned(16#02D#, 9),
     to_unsigned(16#02F#, 9), to_unsigned(16#032#, 9), to_unsigned(16#034#, 9), to_unsigned(16#037#, 9),
     to_unsigned(16#039#, 9), to_unsigned(16#03C#, 9), to_unsigned(16#03F#, 9), to_unsigned(16#041#, 9),
     to_unsigned(16#044#, 9), to_unsigned(16#047#, 9), to_unsigned(16#04A#, 9), to_unsigned(16#04D#, 9),
     to_unsigned(16#050#, 9), to_unsigned(16#052#, 9), to_unsigned(16#055#, 9), to_unsigned(16#058#, 9),
     to_unsigned(16#05B#, 9), to_unsigned(16#05E#, 9), to_unsigned(16#062#, 9), to_unsigned(16#065#, 9),
     to_unsigned(16#068#, 9), to_unsigned(16#06B#, 9), to_unsigned(16#06E#, 9), to_unsigned(16#071#, 9),
     to_unsigned(16#074#, 9), to_unsigned(16#077#, 9), to_unsigned(16#07A#, 9), to_unsigned(16#07E#, 9),
     to_unsigned(16#081#, 9), to_unsigned(16#084#, 9), to_unsigned(16#087#, 9), to_unsigned(16#08A#, 9),
     to_unsigned(16#08D#, 9), to_unsigned(16#091#, 9), to_unsigned(16#094#, 9), to_unsigned(16#097#, 9),
     to_unsigned(16#09A#, 9), to_unsigned(16#09D#, 9), to_unsigned(16#0A0#, 9), to_unsigned(16#0A3#, 9),
     to_unsigned(16#0A6#, 9), to_unsigned(16#0A9#, 9), to_unsigned(16#0AC#, 9), to_unsigned(16#0AF#, 9),
     to_unsigned(16#0B2#, 9), to_unsigned(16#0B5#, 9), to_unsigned(16#0B8#, 9), to_unsigned(16#0BA#, 9),
     to_unsigned(16#0BD#, 9), to_unsigned(16#0C0#, 9), to_unsigned(16#0C3#, 9), to_unsigned(16#0C5#, 9),
     to_unsigned(16#0C8#, 9), to_unsigned(16#0CB#, 9), to_unsigned(16#0CD#, 9), to_unsigned(16#0D0#, 9),
     to_unsigned(16#0D2#, 9), to_unsigned(16#0D4#, 9), to_unsigned(16#0D7#, 9), to_unsigned(16#0D9#, 9),
     to_unsigned(16#0DB#, 9), to_unsigned(16#0DE#, 9), to_unsigned(16#0E0#, 9), to_unsigned(16#0E2#, 9),
     to_unsigned(16#0E4#, 9), to_unsigned(16#0E6#, 9), to_unsigned(16#0E8#, 9), to_unsigned(16#0E9#, 9),
     to_unsigned(16#0EB#, 9), to_unsigned(16#0ED#, 9), to_unsigned(16#0EE#, 9), to_unsigned(16#0F0#, 9),
     to_unsigned(16#0F2#, 9), to_unsigned(16#0F3#, 9), to_unsigned(16#0F4#, 9), to_unsigned(16#0F6#, 9),
     to_unsigned(16#0F7#, 9), to_unsigned(16#0F8#, 9), to_unsigned(16#0F9#, 9), to_unsigned(16#0FA#, 9),
     to_unsigned(16#0FB#, 9), to_unsigned(16#0FC#, 9), to_unsigned(16#0FD#, 9), to_unsigned(16#0FD#, 9),
     to_unsigned(16#0FE#, 9), to_unsigned(16#0FE#, 9), to_unsigned(16#0FF#, 9), to_unsigned(16#0FF#, 9),
     to_unsigned(16#100#, 9), to_unsigned(16#100#, 9), to_unsigned(16#100#, 9), to_unsigned(16#100#, 9),
     to_unsigned(16#100#, 9), to_unsigned(16#100#, 9), to_unsigned(16#100#, 9), to_unsigned(16#100#, 9),
     to_unsigned(16#0FF#, 9), to_unsigned(16#0FF#, 9), to_unsigned(16#0FE#, 9), to_unsigned(16#0FE#, 9),
     to_unsigned(16#0FD#, 9), to_unsigned(16#0FD#, 9), to_unsigned(16#0FC#, 9), to_unsigned(16#0FB#, 9),
     to_unsigned(16#0FA#, 9), to_unsigned(16#0F9#, 9), to_unsigned(16#0F8#, 9), to_unsigned(16#0F7#, 9),
     to_unsigned(16#0F6#, 9), to_unsigned(16#0F4#, 9), to_unsigned(16#0F3#, 9), to_unsigned(16#0F2#, 9),
     to_unsigned(16#0F0#, 9), to_unsigned(16#0EE#, 9), to_unsigned(16#0ED#, 9), to_unsigned(16#0EB#, 9),
     to_unsigned(16#0E9#, 9), to_unsigned(16#0E8#, 9), to_unsigned(16#0E6#, 9), to_unsigned(16#0E4#, 9),
     to_unsigned(16#0E2#, 9), to_unsigned(16#0E0#, 9), to_unsigned(16#0DE#, 9), to_unsigned(16#0DB#, 9),
     to_unsigned(16#0D9#, 9), to_unsigned(16#0D7#, 9), to_unsigned(16#0D4#, 9), to_unsigned(16#0D2#, 9),
     to_unsigned(16#0D0#, 9), to_unsigned(16#0CD#, 9), to_unsigned(16#0CB#, 9), to_unsigned(16#0C8#, 9),
     to_unsigned(16#0C5#, 9), to_unsigned(16#0C3#, 9), to_unsigned(16#0C0#, 9), to_unsigned(16#0BD#, 9),
     to_unsigned(16#0BA#, 9), to_unsigned(16#0B8#, 9), to_unsigned(16#0B5#, 9), to_unsigned(16#0B2#, 9),
     to_unsigned(16#0AF#, 9), to_unsigned(16#0AC#, 9), to_unsigned(16#0A9#, 9), to_unsigned(16#0A6#, 9),
     to_unsigned(16#0A3#, 9), to_unsigned(16#0A0#, 9), to_unsigned(16#09D#, 9), to_unsigned(16#09A#, 9),
     to_unsigned(16#097#, 9), to_unsigned(16#094#, 9), to_unsigned(16#091#, 9), to_unsigned(16#08D#, 9),
     to_unsigned(16#08A#, 9), to_unsigned(16#087#, 9), to_unsigned(16#084#, 9), to_unsigned(16#081#, 9),
     to_unsigned(16#07E#, 9), to_unsigned(16#07A#, 9), to_unsigned(16#077#, 9), to_unsigned(16#074#, 9),
     to_unsigned(16#071#, 9), to_unsigned(16#06E#, 9), to_unsigned(16#06B#, 9), to_unsigned(16#068#, 9),
     to_unsigned(16#065#, 9), to_unsigned(16#062#, 9), to_unsigned(16#05E#, 9), to_unsigned(16#05B#, 9),
     to_unsigned(16#058#, 9), to_unsigned(16#055#, 9), to_unsigned(16#052#, 9), to_unsigned(16#050#, 9),
     to_unsigned(16#04D#, 9), to_unsigned(16#04A#, 9), to_unsigned(16#047#, 9), to_unsigned(16#044#, 9),
     to_unsigned(16#041#, 9), to_unsigned(16#03F#, 9), to_unsigned(16#03C#, 9), to_unsigned(16#039#, 9),
     to_unsigned(16#037#, 9), to_unsigned(16#034#, 9), to_unsigned(16#032#, 9), to_unsigned(16#02F#, 9),
     to_unsigned(16#02D#, 9), to_unsigned(16#02A#, 9), to_unsigned(16#028#, 9), to_unsigned(16#026#, 9),
     to_unsigned(16#024#, 9), to_unsigned(16#021#, 9), to_unsigned(16#01F#, 9), to_unsigned(16#01D#, 9),
     to_unsigned(16#01B#, 9), to_unsigned(16#019#, 9), to_unsigned(16#018#, 9), to_unsigned(16#016#, 9),
     to_unsigned(16#014#, 9), to_unsigned(16#012#, 9), to_unsigned(16#011#, 9), to_unsigned(16#00F#, 9),
     to_unsigned(16#00E#, 9), to_unsigned(16#00C#, 9), to_unsigned(16#00B#, 9), to_unsigned(16#00A#, 9),
     to_unsigned(16#009#, 9), to_unsigned(16#008#, 9), to_unsigned(16#007#, 9), to_unsigned(16#006#, 9),
     to_unsigned(16#005#, 9), to_unsigned(16#004#, 9), to_unsigned(16#003#, 9), to_unsigned(16#002#, 9),
     to_unsigned(16#002#, 9), to_unsigned(16#001#, 9), to_unsigned(16#001#, 9), to_unsigned(16#001#, 9),
     to_unsigned(16#000#, 9), to_unsigned(16#000#, 9), to_unsigned(16#000#, 9), to_unsigned(16#000#, 9));  -- ufix9 [256]

  -- Signals
  SIGNAL Subsystem_out1                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Subsystem_out1_unsigned          : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Switch_out1                      : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Direct_Lookup_Table_n_D_out1     : unsigned(8 DOWNTO 0);  -- ufix9_En8

BEGIN
  u_Subsystem : Subsystem_block3
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Reset_1 => Valid_in,
              Enable => Enable,
              Count => Subsystem_out1  -- uint16
              );

  Subsystem_out1_unsigned <= unsigned(Subsystem_out1);

  
  switch_compare_1 <= '1' WHEN Subsystem_out1_unsigned >= to_unsigned(16#0100#, 16) ELSE
      '0';

  Constant_out1 <= to_unsigned(16#0000#, 16);

  
  Switch_out1 <= Subsystem_out1_unsigned WHEN switch_compare_1 = '0' ELSE
      Constant_out1;

  Direct_Lookup_Table_n_D_out1 <= Direct_Lookup_Table_n_D_table_data(to_integer(Switch_out1));

  coeff <= std_logic_vector(Direct_Lookup_Table_n_D_out1);

END rtl;

