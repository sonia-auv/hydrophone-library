-- -------------------------------------------------------------
-- 
-- File Name: index-test\hdlsrc\Test_DOA\FFTs.vhd
-- Created: 2022-07-15 15:32:39
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FFTs
-- Source Path: Test_DOA/FFTs
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FFTs IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Canal1                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Canal2                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Canal3                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Canal4                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Enable                            :   IN    std_logic;
        HighThreshold                     :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        LowThreshold                      :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Magnitude_Ref                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
        Phase_Ref                         :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
        Valid_out_Ref                     :   OUT   std_logic;
        Magnitude1                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
        Phase1                            :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
        Valid_out1                        :   OUT   std_logic;
        Magnitude2                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
        Phase2                            :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
        Valid_out2                        :   OUT   std_logic;
        Magnitude3                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
        Phase3                            :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
        Valid_out3                        :   OUT   std_logic
        );
END FFTs;


ARCHITECTURE rtl OF FFTs IS

  -- Component Declarations
  COMPONENT Trigger
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Canal1                          :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          HighThreshold                   :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          isReady                         :   IN    std_logic;
          Enable                          :   IN    std_logic;
          LowThreshold                    :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          Ready                           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_Hydro_Ref
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Data                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          ValidIn                         :   IN    std_logic;
          Magnitude                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
          Angle                           :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
          Valid                           :   OUT   std_logic;
          Ready                           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_Hydro_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Data                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          Valid_in                        :   IN    std_logic;
          Magnitude                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
          Phase                           :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
          Valid_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_Hydro_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Data                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          Valid_in                        :   IN    std_logic;
          Magnitude                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
          Phase                           :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
          Valid_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_Hydro_3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Data                            :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          Valid_in                        :   IN    std_logic;
          Magnitude                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18
          Phase                           :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En17
          Valid_out                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Trigger
    USE ENTITY work.Trigger(rtl);

  FOR ALL : FFT_Hydro_Ref
    USE ENTITY work.FFT_Hydro_Ref(rtl);

  FOR ALL : FFT_Hydro_1
    USE ENTITY work.FFT_Hydro_1(rtl);

  FOR ALL : FFT_Hydro_2
    USE ENTITY work.FFT_Hydro_2(rtl);

  FOR ALL : FFT_Hydro_3
    USE ENTITY work.FFT_Hydro_3(rtl);

  -- Signals
  SIGNAL FFT_Hydro_Ref_out4               : std_logic;
  SIGNAL Trigger_out1                     : std_logic;
  SIGNAL FFT_Hydro_Ref_out1               : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL FFT_Hydro_Ref_out2               : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL FFT_Hydro_Ref_out3               : std_logic;
  SIGNAL FFT_Hydro_1_out1                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL FFT_Hydro_1_out2                 : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL FFT_Hydro_1_out3                 : std_logic;
  SIGNAL FFT_Hydro_2_out1                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL FFT_Hydro_2_out2                 : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL FFT_Hydro_2_out3                 : std_logic;
  SIGNAL FFT_Hydro_3_out1                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL FFT_Hydro_3_out2                 : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL FFT_Hydro_3_out3                 : std_logic;

BEGIN
  u_Trigger : Trigger
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Canal1 => Canal1,  -- uint16
              HighThreshold => HighThreshold,  -- uint16
              isReady => FFT_Hydro_Ref_out4,
              Enable => Enable,
              LowThreshold => LowThreshold,  -- uint16
              Ready => Trigger_out1
              );

  u_FFT_Hydro_Ref : FFT_Hydro_Ref
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Data => Canal1,  -- uint16
              ValidIn => Trigger_out1,
              Magnitude => FFT_Hydro_Ref_out1,  -- sfix18
              Angle => FFT_Hydro_Ref_out2,  -- sfix20_En17
              Valid => FFT_Hydro_Ref_out3,
              Ready => FFT_Hydro_Ref_out4
              );

  u_FFT_Hydro_1 : FFT_Hydro_1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Data => Canal2,  -- uint16
              Valid_in => Trigger_out1,
              Magnitude => FFT_Hydro_1_out1,  -- sfix18
              Phase => FFT_Hydro_1_out2,  -- sfix20_En17
              Valid_out => FFT_Hydro_1_out3
              );

  u_FFT_Hydro_2 : FFT_Hydro_2
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Data => Canal3,  -- uint16
              Valid_in => Trigger_out1,
              Magnitude => FFT_Hydro_2_out1,  -- sfix18
              Phase => FFT_Hydro_2_out2,  -- sfix20_En17
              Valid_out => FFT_Hydro_2_out3
              );

  u_FFT_Hydro_3 : FFT_Hydro_3
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Data => Canal4,  -- uint16
              Valid_in => Trigger_out1,
              Magnitude => FFT_Hydro_3_out1,  -- sfix18
              Phase => FFT_Hydro_3_out2,  -- sfix20_En17
              Valid_out => FFT_Hydro_3_out3
              );

  Magnitude_Ref <= FFT_Hydro_Ref_out1;

  Phase_Ref <= FFT_Hydro_Ref_out2;

  Valid_out_Ref <= FFT_Hydro_Ref_out3;

  Magnitude1 <= FFT_Hydro_1_out1;

  Phase1 <= FFT_Hydro_1_out2;

  Valid_out1 <= FFT_Hydro_1_out3;

  Magnitude2 <= FFT_Hydro_2_out1;

  Phase2 <= FFT_Hydro_2_out2;

  Valid_out2 <= FFT_Hydro_2_out3;

  Magnitude3 <= FFT_Hydro_3_out1;

  Phase3 <= FFT_Hydro_3_out2;

  Valid_out3 <= FFT_Hydro_3_out3;

END rtl;

